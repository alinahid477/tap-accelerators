accelerator:
  displayName: Deployment Initialise

  options:
    - name: deploymentType
      inputType: select
      label: Choose the type of deployment
      choices:
      - value: "workload"
        text: Workload
      - value: "deliverable"
        text: Deliverable
      - value: "secretresourceclaim"
        text: Service Binding Secret Resource Claim
      - value: "secretprojectionsetup"
        text: Service Binding Secret Projection Setup (eg database)
      defaultValue: "workload"
      

    - name: gitRepository
      inputType: text
      label: Git Repository for the target project
      description: The Git repository of the project hosting source code
      required: true
      dependsOn:
        name: deploymentType
        value: workload

    - name: gitBranch
      inputType: text
      label: Git Branch for the target project
      defaultValue: development
      description: The Git branch of the project. Pushing or merging to this branch will trigger supply chain.
      required: true
      dependsOn:
        name: deploymentType
        value: workload

    - name: workloadType
      inputType: select
      label: Choose the langugage to apply a test
      choices:
      - value: "java"
        text: Java
      - value: "node"
        text: NodeJS or ReactJS or NextJS
      - value: "dotnet"
        text: .Net (coming soon)
      defaultValue: "java"
      dependsOn:
        name: deploymentType
        value: workload

    - name: javaVersion
      inputType: select
      label: Java Version
      choices:
      - value: "17"
        text: 17
      - value: "11"
        text: 11
      defaultValue: "17"
      dependsOn:
        name: workloadType
        value: java

    - name: dbAccessResourceClaim
      inputType: text
      label: Name of the Resource Claim for accessing DB.
      description: Use resource claim option to generate the resourceclaim object after this.
      defaultValue: db-access-secret-resource-claim
      required: true
      dependsOn:
        name: workloadType
        value: java

    - name: apiEndpoint
      inputType: text
      label: API endpoint
      description: API Endpoint which this application will connect to.
      required: true
      dependsOn:
        name: workloadType
        value: node

    - name: includeHasTests
      inputType: checkbox
      label: "This is a uat workload"
      dataType: boolean
      defaultValue: false
      dependsOn:
        name: deploymentType
        value: workload

    - name: workloadNSforDeliverable
      inputType: text
      label: Name of Workload Namespace
      description: Workload namespace name that this delivery is associated with. This is needed to displaying in the UI.
      required: true
      dependsOn:
        name: deploymentType
        value: deliverable


    - name: dbType
      inputType: select
      label: Database Type
      choices:
      - value: "postgres"
        text: postgres
      - value: "mysql"
        text: MySql
      - value: "mssql"
        text: MS Sql
      defaultValue: "17"
      dependsOn:
        name: deploymentType
        value: secretprojectionsetup

    - name: dbProvider
      inputType: text
      label: Database Provider Name
      description: Provider name of the Database. eg. AWS, Azure, Custom, MyOrg etc
      required: true
      defaultValue: "azure"
      dependsOn:
        name: deploymentType
        value: secretprojectionsetup

    - name: dbHost
      inputType: text
      label: Database Host Name
      description: For example, example.internal.pgsql.tanzu, mydb.postgres.database.azure.com etc
      required: true
      dependsOn:
        name: deploymentType
        value: secretprojectionsetup

    - name: dbPort
      inputType: text
      label: Database Port
      description: For example, 5432, 8080 etc
      required: true
      dependsOn:
        name: deploymentType
        value: secretprojectionsetup

    - name: dbName
      inputType: text
      label: Database Name
      description: Name of the database
      required: true
      dependsOn:
        name: deploymentType
        value: secretprojectionsetup

    - name: dbUsername
      inputType: text
      label: Database Username
      description: Username to access the database
      required: true
      dependsOn:
        name: deploymentType
        value: secretprojectionsetup

    - name: dbPassword
      inputType: text
      label: Database Password
      description: Password for the above username to access the database (used for generating file, not stored)
      required: true
      dependsOn:
        name: deploymentType
        value: secretprojectionsetup

    - name: secretName
      inputType: text
      label: Name of the secret
      description: The name of the secret (to the db)
      required: true
      dependsOn:
        name: deploymentType
        value: secretresourceclaim

    - name: secretNamespace
      inputType: text
      label: Namespace of the secret
      description: The name of the namespace where the secret is created in
      required: true
      dependsOn:
        name: deploymentType
        value: secretresourceclaim

engine:
  merge:
    - include: ["DEPLOYING.md"]
      chain:
        - type: ReplaceText
          substitutions:
            - text: "WORKLOAD_NAME"
              with: "#artifactId"

    - condition: "#deploymentType == 'workload' && !#includeHasTests"
      include: ["workload-dev.yaml", "catalog-info.yaml"]
      chain:
        - type: ReplaceText
          substitutions:
            - text: "WORKLOAD_NAME"
              with: "#artifactId"
            - text: "WORKLOAD_PARTOF"
              with: "#artifactPartOf"
        - type: ReplaceText
          substitutions:
            - text: "DEPLOYMENT_NAMESPACE"
              with: "#namespaceName"
        - type: ReplaceText
          substitutions:
            - text: "https://git.example.com/my-repo"
              with: "#gitRepository"
        - type: ReplaceText
          substitutions:
            - text: "GIT_BRANCH"
              with: "#gitBranch"
        - type: ReplaceText
          condition: "#workloadType == 'java'"
          substitutions:
            - text: "DB_ACCESS_RESOURCE_CLAIM_NAME"
              with: "#dbAccessResourceClaim"
        - type: ReplaceText
          condition: "#workloadType == 'java'"
          substitutions:
            - text: "spec:"
              with: "'spec:\n  build:\n    env:\n    - name: BP_JVM_VERSION\n      value: \"javaversion\"'"
            - text: "env:"
              with: "'env:\n    - name: spring_profiles_active\n      value: pgsql'"
        - type: ReplaceText
          condition: "#workloadType == 'java'"
          substitutions:
            - text: "javaversion"
              with: "#javaVersion"
        - type: ReplaceText
          condition: "#workloadType == 'node'"
          substitutions:
            - text: "spec:"
              with: "'spec:\n  build:\n    env:\n    - name: NODE_ENV\n      value: \"development\"'"            
        - type: ReplaceText
          condition: "#workloadType == 'node'"
          substitutions:
            - text: "spec:"
              with: "'spec:\n  build:\n    env:\n    - name: BP_NODE_RUN_SCRIPTS\n      value: \"build\"'"
        - type: ReplaceText
          condition: "#workloadType == 'node' && #apiEndpoint != ''"
          substitutions:
            - text: "spec:"
              with: "'spec:\n  build:\n    env:\n    - name: NEXT_PUBLIC_API_ENDPOINT\n      value: \"apiservingapp\"'"
        - type: ReplaceText
          condition: "#workloadType == 'node' && #apiEndpoint != ''"
          substitutions:
            - text: "apiservingapp"
              with: "#apiEndpoint"
        - type: OpenRewriteRecipe
          condition: "#workloadType == 'node'"
          recipe: org.openrewrite.yaml.DeleteProperty
          options:
            propertyKey: "'spec.serviceClaims'"
        - type: OpenRewriteRecipe
          condition: "#workloadType == 'node'"
          recipe: org.openrewrite.yaml.DeleteProperty
          options:
            propertyKey: "'spec.params'"
        - type: OpenRewriteRecipe
          condition: "#workloadType == 'node'"
          recipe: org.openrewrite.yaml.DeleteProperty
          options:
            propertyKey: "'metadata.labels.apis.apps.tanzu.vmware.com/register-api'"
            
    - condition: "#deploymentType == 'workload' && #includeHasTests"
      include: ["workload-uat.yaml"]
      chain:
        - type: ReplaceText
          substitutions:
            - text: "WORKLOAD_NAME"
              with: "#artifactId"
            - text: "WORKLOAD_PARTOF"
              with: "#artifactPartOf"
        - type: ReplaceText
          substitutions:
            - text: "DEPLOYMENT_NAMESPACE"
              with: "#namespaceName"
        - type: ReplaceText
          substitutions:
            - text: "https://git.example.com/my-repo"
              with: "#gitRepository"
        - type: ReplaceText
          substitutions:
            - text: "GIT_BRANCH"
              with: "#gitBranch"
        - type: ReplaceText
          substitutions:
            - text: "TEST_PROCESS"
              with: "#workloadType"
        - type: ReplaceText
          condition: "#workloadType == 'java'"
          substitutions:
            - text: "DB_ACCESS_RESOURCE_CLAIM_NAME"
              with: "#dbAccessResourceClaim"
        - type: ReplaceText
          substitutions:
            - text: "  labels:"
              with: "'  labels:\n    apps.tanzu.vmware.com/has-tests: \"true\"'"
        - type: ReplaceText
          condition: "#workloadType == 'java'"
          substitutions:
            - text: "spec:"
              with: "'spec:\n  build:\n    env:\n    - name: BP_JVM_VERSION\n      value: \"javaversion\"'"
            - text: "env:"
              with: "'env:\n    - name: spring_profiles_active\n      value: pgsql'"
        - type: ReplaceText
          condition: "#workloadType == 'java'"
          substitutions:
            - text: "javaversion"
              with: "#javaVersion"
        - type: ReplaceText
          condition: "#workloadType == 'node'"
          substitutions:
            - text: "spec:"
              with: "'spec:\n  build:\n    env:\n    - name: NODE_ENV\n      value: \"development\"'"            
        - type: ReplaceText
          condition: "#workloadType == 'node'"
          substitutions:
            - text: "spec:"
              with: "'spec:\n  build:\n    env:\n    - name: BP_NODE_RUN_SCRIPTS\n      value: \"build\"'"
        - type: ReplaceText
          condition: "#workloadType == 'node' && #apiEndpoint != ''"
          substitutions:
            - text: "spec:"
              with: "'spec:\n  build:\n    env:\n    - name: NEXT_PUBLIC_API_ENDPOINT\n      value: \"apiservingapp\"'"
        - type: ReplaceText
          condition: "#workloadType == 'node' && #apiEndpoint != ''"
          substitutions:
            - text: "apiservingapp"
              with: "#apiEndpoint"
        - type: OpenRewriteRecipe
          condition: "#workloadType == 'node'"
          recipe: org.openrewrite.yaml.DeleteProperty
          options:
            propertyKey: "'spec.serviceClaims'"
        - type: OpenRewriteRecipe
          condition: "#workloadType == 'node'"
          recipe: org.openrewrite.yaml.DeleteKey
          options:
            keyPath: "'$.spec.params[0]'"
        - type: OpenRewriteRecipe
          condition: "#workloadType == 'node'"
          recipe: org.openrewrite.yaml.DeleteProperty
          options:
            propertyKey: "'metadata.labels.apis.apps.tanzu.vmware.com/register-api'"

    - condition: "#deploymentType == 'deliverable'"
      include: ["deliverable.yaml"]
      chain:
        - type: ReplaceText
          substitutions:
            - text: "WORKLOAD_NAME"
              with: "#artifactId"
            - text: "WORKLOAD_PARTOF"
              with: "#artifactPartOf"
            - text: "NAMESPACE_OF_WORKLOAD"
              with: "#workloadNSforDeliverable"
            - text: "DEPLOYMENT_NAMESPACE"
              with: "#namespaceName"
            
        
    - condition: "#deploymentType == 'secretprojectionsetup'"
      include: ["secret-for-db.yaml", "secret-projection-setup.yaml"]
      chain:
        - type: ReplaceText
          substitutions:
            - text: "WORKLOAD_NAME"
              with: "#artifactId"
            - text: "DEPLOYMENT_NAMESPACE"
              with: "#namespaceName"
            - text: "DB_TYPE"
              with: "#dbType"
            - text: "DB_PROVIDER"
              with: "#dbProvider"
            - text: "DB_HOST"
              with: "#dbHost"
            - text: "DB_PORT"
              with: "#dbPort"
            - text: "DB_NAME"
              with: "#dbName"
            - text: "DB_USERNAME"
              with: "#dbUsername"
            - text: "DB_PASSWORD"
              with: "#dbPassword"

    - condition: "#deploymentType == 'secretresourceclaim'"
      include: ["secret-resource-claim.yaml"]
      chain:
        - type: ReplaceText
          substitutions:
            - text: "WORKLOAD_NAME"
              with: "#artifactId"
            - text: "DEPLOYMENT_NAMESPACE"
              with: "#namespaceName"
            - text: "SECRET_NAME"
              with: "#secretName"
            - text: "NAMESPACE_OF_THE_SECRET"
              with: "#secretNamespace"
