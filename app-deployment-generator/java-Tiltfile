LOCAL_PATH = os.getenv("LOCAL_PATH", default='.')
NAMESPACE = os.getenv("NAMESPACE", default='RPLC_NAMESPACE_NAME')
OUTPUT_TO_NULL_COMMAND = os.getenv("OUTPUT_TO_NULL_COMMAND", default=' > /dev/null ')
allow_k8s_contexts('YOUR_K8S_CONTEXT')
update_settings ( max_parallel_updates = 3 , k8s_upsert_timeout_secs = 3000 , suppress_unused_image_warnings = None )
k8s_custom_deploy(
    'RPLC_WORKLOAD_NAME',
    apply_cmd="tanzu apps workload apply -f configs/localdev/workload-local.yaml --update-strategy replace --debug --live-update" +
               " --local-path " + LOCAL_PATH +
               " --namespace " + NAMESPACE +
               " --yes " +
               OUTPUT_TO_NULL_COMMAND +
               " && kubectl get workload RPLC_WORKLOAD_NAME --namespace " + NAMESPACE + " -o yaml",
    delete_cmd="tanzu apps workload delete -f configs/localdev/workload-local.yaml --namespace " + NAMESPACE + " --yes",
    deps=['pom.xml', './target/classes'],
    container_selector='workload',
    live_update=[
      sync('./target/classes', '/workspace/BOOT-INF/classes')
    ]
)

k8s_resource('RPLC_WORKLOAD_NAME', port_forwards=["8080:8080"],
            extra_pod_selectors=[{'carto.run/workload-name': 'RPLC_WORKLOAD_NAME'}])